<?php

include("../config.php");
include("../header.php");


//User input is scanned for undersierable characters. This is done to prevent SQL injection
$userInput = array(
   $_POST['NotificationTitle'],
   $_POST['NotificationDescription'],
   $_POST['PostDate'],
   $_POST['PostTimeHour'],
   $_POST['PostTimeMinute'],
   $_POST['PostTimeAMPM']
);
$inputCount=0;
foreach($userInput as $string)
{
   $evaluate=containsSpecialChar($string);
   if($evaluate['contains']==true)
   {
      if(inputCount==0)echo '<body><p>Your input contains special characters, please go back and remove the characters listed below from your input.</p></body>';
      echo '<body><p>"'.$string.'" contains the following special characters: ['.$evaluate['charList'].']</p></body>';
      $inputCount=$inputCount+1;
   }
}

if($inputCount>0)
{
   die();
}


/*********************************************
POST TO DATABASE VIA REST
*********************************************/

// REST url
$url = URL_START .'/public/api/notifications/add';

// Store session token in variable.
$token = $_SESSION['token'];

// Need to initiate curl
$ch = curl_init($url . '?authorization=' . $token);

// Create array for json data.
//Bind user input to request object
$jsonData = array(
    'NotificationTitle' => $_POST['NotificationTitle'],
    'NotificationDescription' => $_POST['NotificationDescription'],
    'PostDate' => $_POST['PostDate'],
    'PostTimeHour' => $_POST['PostTimeHour'],
    'PostTimeMinute' => $_POST['PostTimeMinute'],
    'PostTimeAMPM' => $_POST['PostTimeAMPM'],
);

// Need to encode this array into json.
$jsonDataEncoded = json_encode($jsonData);

// curl hands the post request
curl_setopt($ch, CURLOPT_POST, 1);

// json string is now attached to the post fields.
curl_setopt($ch, CURLOPT_POSTFIELDS, $jsonDataEncoded);

// Set the content type to application/json.
curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));

// Need to execute the request.
$result = curl_exec($ch);


/*********************************************
PUSH NOTIFICATION FOR ANNOUNCEMENT
*********************************************/
// Will only send post notification if admin denoted 'Yes' on createMenu.php.
if ($_POST['PushNotificationOption'] == 1) {

  // Need to define API key.
  $APIconfig = parse_ini_file('../../db.ini');
  define('API_ACCESS_KEY', $APIconfig['API_ACCESS_KEY']);

    // Message contents will contain notification title and description.
    $fcmMsg = array(
    	'body' => $_POST['NotificationDescription'],
    	'title' => $_POST['NotificationTitle'],
    );

    // Send notification to the 'news' topic, which is the only and default topic for this app.
    $fcmFields = array(
    	'to' => '/topics/news',
            'priority' => 'high',
    	'notification' => $fcmMsg
    );

    // Send headers for json file with key.
    $headers = array(
    	'Authorization: key=' . API_ACCESS_KEY,
    	'Content-Type: application/json'
    );

    // Curl code to send json details to Google's FCM cloud API.
    $ch = curl_init();
    curl_setopt( $ch,CURLOPT_URL, 'https://fcm.googleapis.com/fcm/send' );
    curl_setopt( $ch,CURLOPT_POST, true );
    curl_setopt( $ch,CURLOPT_HTTPHEADER, $headers );
    curl_setopt( $ch,CURLOPT_RETURNTRANSFER, true );
    curl_setopt( $ch,CURLOPT_SSL_VERIFYPEER, false );
    curl_setopt( $ch,CURLOPT_POSTFIELDS, json_encode( $fcmFields ) );
    $result = curl_exec($ch );
    curl_close( $ch );
    echo $result . "\n\n";

} // End if statement for checking if notification should be sent.

//Add Notification to log
$file = '../Log/createNotification.log';

//REST url
//Here we pull the newest notification, which is the one that was just created.
$url=URL_START .'/public/api/notifications/newest';

//open the file generated by the REST API
$handle=fopen($url,"r");
if($handle){
   $notificationInfo=fgets($handle);
   date_default_timezone_set("America/Denver");
   $currDate=date("Y-m-d h:i:sa");
   $line='User (ID:'.$_SESSION['userID'].', User Name:'.$_SESSION['LoginID'].') on '.$currDate.' Created: '.$notificationInfo.PHP_EOL;
   file_put_contents($file,$line,FILE_APPEND | LOCK_EX);
   fclose($handle);
}
else{
   echo "error reading file (".$url.")";
}

?>

<html>

   <p>
      <form action="createMenu" method="post"><input type="submit" value="Return"/></form>
   </p>

</html>
